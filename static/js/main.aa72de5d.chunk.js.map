{"version":3,"sources":["Domain.js","ExactDomain.js","SearchResults.js","util.js","DomainSearch.js","index.js"],"names":["Domain","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","state","selected","content","_this2","_this$props$domainRes","props","domainResult","domain","listPrice","salePrice","extendedValidation","disclaimer","_this$props","text","cartClick","react_default","a","createElement","className","onClick","select","Component","ExactDomain","available","availableText","replace","notAvailableText","notAvailable","SearchResults","_ref","results","plid","exactMatchDomain","baseUrl","suggestedDomains","src_ExactDomain","Domain_Domain","map","index","key","util","location","params","url","URL","keys","forEach","searchParams","append","fetchJsonp","href","timeout","then","response","json","initialState","searching","addingToCart","error","selectedDomains","hasError","DomainSearch","handleChange","bind","assertThisInitialized","handleDomainSearch","handleContinueClick","domainToCheck","setState","search","event","target","value","q","pageSize","domainUrl","concat","data","message","catch","e","preventDefault","length","domains","_this$props2","cartUrl","items","item","push","id","cart","JSON","stringify","_this3","_this$state","addDomainsToCart","NextStepUrl","window","domainObj","indexOf","newSelectDomains","toConsumableArray","slice","_this4","_this$state2","domainCount","hasExactMatch","onbeforeunload","undefined","onSubmit","type","onChange","placeholder","disabled","src_SearchResults","handleSelectClick","elements","document","getElementsByClassName","Array","prototype","call","element","dataset","text_placeholder","text_search","text_available","text_not_available","text_cart","text_select","text_selected","base_url","page_size","parsed","queryString","parse","ReactDOM","render","DomainSearch_DomainSearch"],"mappings":"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","file":"static/js/main.aa72de5d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Domain extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.state = {\n      selected: false\n    };\n  };\n\n  render() {\n    const {\n      domain,\n      listPrice,\n      salePrice,\n      extendedValidation,\n      disclaimer\n    } = this.props.domainResult;\n\n    const {\n      text,\n      cartClick\n    } = this.props;\n\n    let content;\n\n    if (this.state.selected) {\n      content = (\n        <div className=\"rstore-message\">\n          <span className=\"dashicons dashicons-yes rstore-success\"></span>\n          <a className=\"rstore-domain-buy-button submit button selected btn btn-default\" onClick={ ()=>cartClick(this) }>{ text.selected }</a>\n        </div>\n      );\n    }\n    else {\n      content = (\n        <div className=\"rstore-message\">\n          { listPrice !== salePrice && <span className=\"listPrice\"><small><s>{ listPrice }</s></small></span> }\n          <span className=\"salePrice\"><strong>{ salePrice}{extendedValidation && '*' }</strong></span>\n           <a className=\"rstore-domain-buy-button submit button select btn btn-secondary\" onClick={ ()=>cartClick(this) }>{ text.select }</a>\n        </div>\n      );\n    }\n\n    if (domain && listPrice) {\n      return (\n        <div className=\"domain-result\">\n          <div className=\"domain-name\">\n            { domain }\n            <span className=\"rstore-disclaimer\"><pre>{ disclaimer }</pre></span>\n          </div>\n          <div className=\"purchase-info\">\n            { content }\n          </div>\n        </div>\n      );\n    }\n\n    return(<div></div>);\n  }\n}\n\nDomain.propTypes = {\n  domainResult: PropTypes.object.isRequired,\n  text: PropTypes.object.isRequired,\n  cartClick: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ExactDomain = (props) => {\n  const {\n    domainResult,\n    text\n  } = props;\n\n  let content = null;\n\n  if (domainResult.available) {\n    const availableText = text.available.replace('{domain_name}', domainResult.domain);\n    content = (\n      <p className=\"available\">{ availableText }</p>\n    );\n  }\n  else {\n    const notAvailableText = text.notAvailable.replace('{domain_name}', domainResult.domain);\n    content = (\n      <p className=\"not-available\">{ notAvailableText }</p>\n    );\n  }\n\n  return content;\n}\n\nExactDomain.propTypes = {\n  domainResult: PropTypes.object.isRequired,\n  text: PropTypes.object.isRequired\n}\n\nexport default ExactDomain;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Domain from './Domain';\nimport ExactDomain from './ExactDomain';\n\nconst SearchResults = ({ results, cartClick, plid, text, baseUrl }) => {\n  const {\n    exactMatchDomain,\n    suggestedDomains,\n    disclaimer\n  } = results;\n\n  return (\n    <div className=\"result-content\">\n      <ExactDomain domainResult={ exactMatchDomain } text={ text } />\n      <div className=\"rstore-exact-domain-list\">\n        <Domain domainResult={ exactMatchDomain } text={ text } cartClick={ cartClick }/>\n      </div>\n      <div className=\"rstore-domain-list\">\n        { suggestedDomains && suggestedDomains.map((domainResult, index) => {\n          return domainResult.available && (<Domain key={ index } domainResult={ domainResult } text={ text } cartClick={ cartClick }/>);\n        })}\n      </div>\n      <div className=\"rstore-disclaimer\"><pre>{ disclaimer }</pre></div>\n    </div>\n  );\n};\n\nSearchResults.propTypes = {\n  results: PropTypes.object.isRequired,\n  cartClick: PropTypes.func.isRequired,\n  text: PropTypes.object.isRequired\n}\n\nexport default SearchResults;\n","import fetchJsonp from 'fetch-jsonp';\n\n// istanbul ignore next\nconst fetchjsonp = (location, params) => {\n  var url = new URL(location);\n  Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n  return fetchJsonp(url.href, { timeout: 15000 })\n    .then(response => {\n      return response.json();\n    });\n  }\n\nexport default { fetchJsonp: fetchjsonp };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SearchResults from './SearchResults';\n\nimport util from './util';\n\nconst initialState = {\n  results: null,\n  searching: false,\n  addingToCart: false,\n  error: '',\n  selectedDomains: [],\n  hasError: false,\n  domain: ''\n};\n\nexport default class DomainSearch extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDomainSearch = this.handleDomainSearch.bind(this);\n    this.handleContinueClick = this.handleContinueClick.bind(this);\n\n    this.state = initialState;\n  };\n\n  componentDidMount() {\n    if (this.props.domainToCheck) {\n      this.setState({ domain: this.props.domainToCheck });\n      this.search(this.props.domainToCheck);\n    }\n  }\n\n  handleChange(event) {\n    this.setState({ domain: event.target.value });\n  }\n\n  search(q) {\n    const {\n      baseUrl,\n      plid,\n      pageSize\n    } = this.props;\n\n    this.setState({ searching: true });\n\n    const domainUrl = `https://www.${baseUrl}/api/v1/domains/${plid}/`;\n\n    return util.fetchJsonp(domainUrl, { pageSize, q }).then(data => {\n        this.setState({\n          results: data.exactMatchDomain ? data : null,\n          error: data.error ? data.error.message : '',\n          searching: false\n        });\n      }).catch(error => {\n        this.setState({\n          searching: false,\n          error: error.message\n        });\n      });\n  }\n\n  handleDomainSearch(e) {\n    e.preventDefault();\n    if (this.state.domain.length > 0) {\n      this.search(this.state.domain);\n    }\n  }\n\n  addDomainsToCart(domains) {\n    const {\n      baseUrl,\n      plid\n    } = this.props;\n\n    const cartUrl = `https://www.${baseUrl}/api/v1/cart/${plid}/`;\n    const items =[];\n\n    domains.forEach(item => {\n      items.push({\n        id: 'domain',\n        domain: item.domain\n      });\n    });\n\n    var cart = JSON.stringify({ items });\n\n    return util.fetchJsonp(cartUrl, { cart });\n  }\n\n  handleContinueClick(e) {\n    e.preventDefault();\n\n    const {\n      selectedDomains,\n      results\n    } = this.state;\n\n    this.setState({ addingToCart: true });\n\n    let domains;\n\n    if (selectedDomains.length === 0 && results.exactMatchDomain.available) {\n      domains = [results.exactMatchDomain];\n    }\n    else {\n      domains = selectedDomains;\n    }\n\n    this.addDomainsToCart(\n      domains\n    ).then(response => {\n      if (response.NextStepUrl) {\n       return window.location.href = response.NextStepUrl;\n      }\n\n      if (response.error){\n        return this.setState({\n          addingToCart: false,\n          error: response.error.message\n        });\n      }\n\n\n    }).catch(error => {\n      this.setState({\n        addingToCart: false,\n        error: error.message\n      });\n    });\n  }\n\n  handleSelectClick(domainObj) {\n    const { selectedDomains } = this.state;\n\n    const index = selectedDomains.indexOf(domainObj.props.domainResult);\n    let newSelectDomains = [];\n\n    if (index >= 0 ){\n      newSelectDomains = [\n        ...selectedDomains.slice(0, index),\n        ...selectedDomains.slice(index+1)\n      ];\n\n      domainObj.setState({\n        selected: false,\n      });\n    }\n    else {\n      newSelectDomains = [\n        ...selectedDomains,\n        domainObj.props.domainResult\n      ];\n\n      domainObj.setState({\n        selected: true,\n      });\n    }\n\n    this.setState({ selectedDomains: newSelectDomains });\n  }\n\n  render() {\n    const {\n      searching,\n      addingToCart,\n      results,\n      selectedDomains,\n      error\n    } = this.state;\n\n    const domainCount = selectedDomains.length;\n    const hasExactMatch = results && results.exactMatchDomain && results.exactMatchDomain.available;\n\n    // Prevent navigation when domains are selected and user attempts to navigate\n    // outside of the domain purchase path\n    window.onbeforeunload = () => {\n      // Most browsers control the return message to the user, we can safely return an empty string here.\n      return !addingToCart && (hasExactMatch || domainCount > 0) ? '' : undefined;\n    };\n\n    return (\n      <form className=\"search-form\" onSubmit={ this.handleDomainSearch }>\n        <div className=\"input-group\">\n          <div className=\"input-group2\">\n            <label>\n              <input type=\"search\" value={ this.state.domain } onChange={ this.handleChange } className=\"search-field\" placeholder={ this.props.text.placeholder } />\n            </label>\n            <input type=\"submit\" className=\"rstore-domain-search-button search-submit btn btn-primary\" disabled={ searching } value={ this.props.text.search }/>\n          </div>\n          { results && <span className=\"input-continue-btn\">\n            <button type=\"button\" className=\"rstore-domain-continue-button btn btn-secondary\"\n              onClick={ this.handleContinueClick }\n              disabled={ domainCount === 0 && !hasExactMatch }\n              >\n              { this.props.text.cart }\n              { (domainCount > 0) && `(${domainCount} ${this.props.text.selected})` }\n            </button>\n          </span> }\n        </div>\n          { error && <div className=\"rstore-error\">Error: { error }</div> }\n          { (addingToCart || searching) && <div className=\"rstore-loading\"></div> }\n          { results && <SearchResults results={ results } cartClick={ domain => this.handleSelectClick(domain) } text={ this.props.text }/> }\n      </form>\n    );\n  }\n}\n\nDomainSearch.propTypes = {\n  plid: PropTypes.string.isRequired,\n  text: PropTypes.object.isRequired,\n  baseUrl: PropTypes.string.isRequired\n}\n","import 'url-polyfill';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport DomainSearch from './DomainSearch';\nimport queryString from 'query-string';\n\nconst elements = document.getElementsByClassName('rstore-domain-search');\n\nArray.prototype.forEach.call(elements, element => {\n  //variable naming is based on WordPress coding standards\n  // https://make.wordpress.org/core/handbook/best-practices/coding-standards/php/#naming-conventions\n  const text = {\n    placeholder: element.dataset.text_placeholder || 'Find your perfect domain name',\n    search: element.dataset.text_search || 'Search',\n    available: element.dataset.text_available || 'Congrats, {domain_name} is available!',\n    notAvailable: element.dataset.text_not_available || 'Sorry, {domain_name} is taken.',\n    cart: element.dataset.text_cart || 'Continue to Cart',\n    select: element.dataset.text_select || 'Select',\n    selected: element.dataset.text_selected || 'Selected'\n  };\n\n  const baseUrl = element.dataset.base_url || 'secureserver.net';\n  const pageSize = element.dataset.page_size || '5';\n  const parsed = queryString.parse(window.location.search);\n\n  return ReactDOM.render(\n    <DomainSearch text={text} plid={element.dataset.plid} baseUrl={baseUrl} pageSize={pageSize} domainToCheck={parsed.domainToCheck}/>,\n    element\n  );\n});\n"],"sourceRoot":""}